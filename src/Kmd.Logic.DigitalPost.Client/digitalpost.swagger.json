{
  "swagger": "2.0",
  "info": {
    "version": "1.1.2",
    "title": "KMD Logic Digital Post Service API"
  },
  "paths": {
    "/subscriptions/{subscriptionId}/digital-post/messages": {
      "post": {
        "tags": [
          "DigitalPost"
        ],
        "summary": "Sends a single text message to a citizen/company.",
        "operationId": "SendMessage",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Id of LoGIC subscription",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Request body",
            "schema": {
              "$ref": "#/definitions/SendMessageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SendMessageResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/digital-post/documents": {
      "post": {
        "tags": [
          "DigitalPost"
        ],
        "summary": "Sends a single document to a citizen/company.",
        "operationId": "SendDocument",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Id of LoGIC subscription",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Request body",
            "schema": {
              "$ref": "#/definitions/SendDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SendMessageResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/digital-post/attachments": {
      "post": {
        "tags": [
          "DigitalPost"
        ],
        "summary": "Uploads a single file that could be add as an attachment to the message later.",
        "operationId": "UploadAttachment",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Id of LoGIC subscription",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "attachment",
            "in": "formData",
            "description": "File added to message",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UploadAttachmentResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/digital-post/{digitalPostConfigurationId}/citizen-consent": {
      "post": {
        "tags": [
          "DigitalPost"
        ],
        "summary": "Gets the consent to send a single document to a citizen/company.",
        "operationId": "GetConsent",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "digitalPostConfigurationId",
            "in": "path",
            "description": "DigitalPost provider configuration Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendConsentPayloadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/digital-post/configurations/{configurationId}": {
      "get": {
        "tags": [
          "DigitalPostConfiguration"
        ],
        "summary": "Retrieves digital post configuration provider assigned to the logic subscription",
        "operationId": "GetDigitalPostConfiguration",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Id of LoGIC subscription",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "configurationId",
            "in": "path",
            "description": "Id of Digital Post configuration provider",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DigitalPostProviderConfigurationModel"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/digital-post/configurations": {
      "get": {
        "tags": [
          "DigitalPostConfiguration"
        ],
        "summary": "Retrieves digital post configuration providers assigned to the logic subscription",
        "operationId": "GetAllDigitalPostConfigurations",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Id of LoGIC subscription",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DigitalPostProviderConfigurationModel"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/digital-post/configurations/doc2mail": {
      "put": {
        "tags": [
          "Doc2MailConfiguration"
        ],
        "summary": "Updates existing Doc2Mail configuration and upload certificate files.",
        "operationId": "UpdateDoc2MailConfiguration",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Id of LoGIC subscription",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "id",
            "in": "formData",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "systemId",
            "in": "formData",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "environment",
            "in": "formData",
            "type": "string",
            "enum": [
              "Production",
              "Test"
            ]
          },
          {
            "name": "callbackUrl",
            "in": "formData",
            "type": "string",
            "format": "uri"
          },
          {
            "name": "certificate",
            "in": "formData",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Doc2MailProviderConfiguration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Doc2MailConfiguration"
        ],
        "summary": "Adds Doc2Mail configuration and upload certificate files.",
        "operationId": "CreateDoc2MailConfiguration",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Id of LoGIC subscription",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "id",
            "in": "formData",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "systemId",
            "in": "formData",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "environment",
            "in": "formData",
            "type": "string",
            "enum": [
              "Production",
              "Test"
            ]
          },
          {
            "name": "callbackUrl",
            "in": "formData",
            "type": "string",
            "format": "uri"
          },
          {
            "name": "certificate",
            "in": "formData",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Doc2MailProviderConfiguration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/digital-post/configurations/fakeprovider": {
      "put": {
        "tags": [
          "FakeConfiguration"
        ],
        "summary": "Adds fake provider configuration",
        "operationId": "UpdateFakeConfiguration",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Id of LoGIC subscription",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "id",
            "in": "formData",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "callbackUrl",
            "in": "formData",
            "type": "string",
            "format": "uri"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FakeProviderConfiguration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "FakeConfiguration"
        ],
        "summary": "Adds fake provider configuration",
        "operationId": "CreateFakeConfiguration",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Id of LoGIC subscription",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "id",
            "in": "formData",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "callbackUrl",
            "in": "formData",
            "type": "string",
            "format": "uri"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FakeProviderConfiguration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {
    "MessageAttachment": {
      "type": "object",
      "properties": {
        "referenceId": {
          "format": "uuid",
          "description": "Identifier of the uploaded file",
          "type": "string"
        },
        "fileName": {
          "description": "Name of the file",
          "type": "string"
        }
      }
    },
    "SendMessageRequest": {
      "description": "Single text message request",
      "type": "object",
      "properties": {
        "message": {
          "description": "Message content",
          "type": "string"
        },
        "configurationId": {
          "format": "uuid",
          "description": "Id of provider configuration to use",
          "type": "string"
        },
        "identifierType": {
          "type": "string",
          "enum": [
            "Cpr",
            "Cvr"
          ]
        },
        "identifier": {
          "description": "Identifier value (CPR/CVR)",
          "type": "string"
        },
        "materialId": {
          "description": "Id of the material defined in eBoks / Document Type defined by Doc2Mail",
          "type": "string"
        },
        "pNumber": {
          "description": "The PNumber (dk. \"P-nummer\") is the Production Unit Identifier agreed between the sender and receiver \r\nto distribute a message to a particular department, production site, etc. within an organisation (CVR).",
          "type": "string"
        },
        "title": {
          "description": "Title of the message",
          "type": "string"
        },
        "metadata": {
          "description": "Message metadata",
          "type": "string"
        },
        "attachments": {
          "description": "Array of attachments - max 10 (9 if metadata exist)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageAttachment"
          }
        }
      }
    },
    "SendMessageResponse": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string"
        }
      }
    },
    "SendDocumentRequest": {
      "type": "object",
      "properties": {
        "contentReferenceId": {
          "format": "uuid",
          "description": "Identifier of the uploaded file to be put as message content",
          "type": "string"
        },
        "contentExtension": {
          "description": "Extension of the content file (pdf, txt, doc, etc)",
          "type": "string"
        },
        "configurationId": {
          "format": "uuid",
          "description": "Id of provider configuration to use",
          "type": "string"
        },
        "identifierType": {
          "type": "string",
          "enum": [
            "Cpr",
            "Cvr"
          ]
        },
        "identifier": {
          "description": "Identifier value (CPR/CVR)",
          "type": "string"
        },
        "materialId": {
          "description": "Id of the material defined in eBoks / Document Type defined by Doc2Mail",
          "type": "string"
        },
        "pNumber": {
          "description": "The PNumber (dk. \"P-nummer\") is the Production Unit Identifier agreed between the sender and receiver \r\nto distribute a message to a particular department, production site, etc. within an organisation (CVR).",
          "type": "string"
        },
        "title": {
          "description": "Title of the message",
          "type": "string"
        },
        "metadata": {
          "description": "Message metadata",
          "type": "string"
        },
        "attachments": {
          "description": "Array of attachments - max 10 (9 if metadata exist)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageAttachment"
          }
        }
      }
    },
    "UploadAttachmentResponse": {
      "type": "object",
      "properties": {
        "referenceId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "SendConsentPayloadRequest": {
      "type": "object",
      "properties": {
        "sendingSystem": {
          "type": "string"
        },
        "cpr": {
          "type": "string"
        },
        "documentType": {
          "type": "string"
        }
      }
    },
    "DigitalPostProviderConfigurationModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "subscriptionId": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "systemId": {
          "format": "int32",
          "type": "integer"
        },
        "callbackUrl": {
          "format": "uri",
          "type": "string"
        },
        "certificateFileName": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        }
      }
    },
    "Doc2MailProviderConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "subscriptionId": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "systemId": {
          "format": "int32",
          "type": "integer"
        },
        "callbackUrl": {
          "format": "uri",
          "type": "string"
        },
        "certificateFileName": {
          "type": "string"
        },
        "environment": {
          "type": "string",
          "enum": [
            "Production",
            "Test"
          ]
        }
      }
    },
    "FakeProviderConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "subscriptionId": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "systemId": {
          "format": "int32",
          "type": "integer"
        },
        "callbackUrl": {
          "format": "uri",
          "type": "string"
        },
        "certificateFileName": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "Standard Authorization header using the Bearer scheme. <b>Example: \"bearer {token}\".</b> You can obtain that value from your browser Developer tools"
    }
  }
}